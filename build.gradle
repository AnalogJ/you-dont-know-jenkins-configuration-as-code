apply plugin: 'groovy'
import org.yaml.snakeyaml.Yaml


ext {
    jcascVersion = '1.41'
    jenkinsVersion = '2.243'
}


buildscript{
    repositories{
        mavenCentral()
    }
    dependencies{
        classpath("org.yaml:snakeyaml:1.26")
    }
}


sourceSets {
    jobs {
        groovy {
            srcDirs 'src/jobs'
            compileClasspath += main.compileClasspath
        }
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

repositories {
    mavenCentral()
    maven { url 'http://repo.jenkins-ci.org/releases/' }
    maven { url 'https://jitpack.io' }
    jcenter()
}

configurations {
    testPlugins {}

    // see JENKINS-45512
    testCompile {
        exclude group: 'xalan'
        exclude group: 'xerces'
    }
}

// Exclude buggy Xalan dependency this way the JRE default TransformerFactory is used
// The xalan pulled in by htmlunit does not properly deal with spaces folder / job names
configurations.all*.exclude group: 'xalan'

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.11'
    compile "io.jenkins:configuration-as-code:${jcascVersion}@jar"
    compile "io.jenkins.configuration-as-code:test-harness:${jcascVersion}@jar"
    compile 'org.kohsuke:github-api:1.93'
    compile 'org.yaml:snakeyaml:1.26'

    testCompile 'org.spockframework:spock-core:1.3-groovy-2.4'
    testCompile 'cglib:cglib-nodep:2.2.2' // used by Spock

    // Jenkins test harness dependencies
    testCompile('org.jenkins-ci.main:jenkins-test-harness:2.64') {
        exclude group: 'org.netbeans.modules', module: 'org-netbeans-insane' // https://github.com/sheehan/job-dsl-gradle-example/issues/90
    }
    testCompile("org.jenkins-ci.main:jenkins-war:${jenkinsVersion}") {
        exclude group: 'org.jenkins-ci.ui', module: 'bootstrap' // https://github.com/sheehan/job-dsl-gradle-example/issues/87
    }

    // jars/plugins required for test suite

    testCompile 'com.github.everit-org.json-schema:org.everit.json.schema:1.12.1'
    testCompile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.11.0'
    testCompile 'io.vavr:vavr:0.10.2'

    // plugins to install on the in-memory Jenkins server (for schema validation)
    testPlugins parsePluginsYaml()
}

task resolveTestPlugins(type: Copy) {
    from configurations.testPlugins
    into new File(sourceSets.test.output.resourcesDir, 'test-dependencies')
    include '*.hpi'
    include '*.jpi'
    def mapping = [:]

    doFirst {
        configurations.testPlugins.resolvedConfiguration.resolvedArtifacts.each {
            mapping[it.file.name] = "${it.name}.${it.extension}"
        }
    }
    rename { mapping[it] }

    doLast {
        List<String> baseNames = source*.name.collect { mapping[it] }.collect { it[0..it.lastIndexOf('.') - 1] }
        new File(destinationDir, 'index').setText(baseNames.join('\n'), 'UTF-8')
    }
}

test {
    dependsOn tasks.resolveTestPlugins
    inputs.files sourceSets.jobs.groovy.srcDirs
}


def parsePluginsYaml(){
    Yaml yaml = new Yaml()
    def yamlContent = yaml.load(('plugins.yaml' as File).text)


    def plugins = []
    yamlContent.plugins.each { entry ->
        plugins << "${entry.group}:${entry.name}:${entry.version}"
    }
    return plugins
}
